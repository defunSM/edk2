//
//  VFR compiler version  2.01 (UEFI 2.4) Developer Build based on Revision: Unknown
//
extern unsigned char HddPasswordDxeStrings[];
extern EFI_GUID gEfiHiiPlatformSetupFormsetGuid;
extern EFI_GUID gEfiHiiDriverHealthFormsetGuid;
extern EFI_GUID gEfiHiiUserCredentialFormsetGuid;
extern EFI_GUID gEfiHiiRestStyleFormsetGuid;
#pragma pack(1)
typedef struct {
  UINT8 Supported:1;
  UINT8 Enabled:1;
  UINT8 Locked:1;
  UINT8 Frozen:1;
  UINT8 UserPasswordStatus:1;
  UINT8 MasterPasswordStatus:1;
  UINT8 Reserved:2;
} HDD_PASSWORD_SECURITY_STATUS;
typedef struct {
  UINT8 UserPassword:1;
  UINT8 MasterPassword:1;
  UINT8 Reserved:6;
} HDD_PASSWORD_REQUEST;
typedef struct _HDD_PASSWORD_CONFIG {
  HDD_PASSWORD_SECURITY_STATUS SecurityStatus;
  HDD_PASSWORD_REQUEST Request;
} HDD_PASSWORD_CONFIG;
#pragma pack()
formset
>00000000: 0E A7 D7 DE 7C 73 8B 44 01 48 B5 7D B1 94 83 EC 60 6F 02 00 02 00 01 71 99 03 93 45 85 04 4B B4 5E 32 EB 83 26 04 0E 
>00000027: 5C 06 00 00 00 00 
>0000002D: 5C 06 00 00 01 00 
  guid = { 0x737cded7, 0x448b, 0x4801, { 0xb5, 0x7d, 0xb1, 0x94, 0x83, 0xec, 0x60, 0x6f } },
  title = STRING_TOKEN(0x0002),
  help = STRING_TOKEN(0x0002),
  classguid = { 0x93039971, 0x8545, 0x4b04, { 0xb4, 0x5e, 0x32, 0xeb, 0x83, 0x26, 0x4, 0xe } },
  varstore HDD_PASSWORD_CONFIG,
>00000033: 24 2A D7 DE 7C 73 8B 44 01 48 B5 7D B1 94 83 EC 60 6F 01 00 02 00 48 44 44 5F 50 41 53 53 57 4F 52 44 5F 43 4F 4E 46 49 47 00 
  name = HDD_PASSWORD_CONFIG,
  guid = { 0x737cded7, 0x448b, 0x4801, { 0xb5, 0x7d, 0xb1, 0x94, 0x83, 0xec, 0x60, 0x6f } };
  form formid = 1,
>0000005D: 01 86 01 00 02 00 
    title = STRING_TOKEN(0x0002);
    label 0x1234;
>00000063: 5F 15 35 17 0B 0F A0 87 93 41 B2 66 53 8C 38 AF 48 CE 00 34 12 
    label 0xffff;
>00000078: 5F 15 35 17 0B 0F A0 87 93 41 B2 66 53 8C 38 AF 48 CE 00 FF FF 
  endform;
>0000008D: 29 02 
  form
>0000008F: 01 86 02 00 09 00 
    formid = 2,
    title = STRING_TOKEN(0x0009);
    subtitle text = STRING_TOKEN(0x0003);
>00000095: 02 87 03 00 00 00 00 
>0000009C: 29 02 
    subtitle text = STRING_TOKEN(0x0019);
>0000009E: 02 87 19 00 00 00 00 
>000000A5: 29 02 
        subtitle text = STRING_TOKEN(0x0004);
>000000A7: 02 87 04 00 00 00 00 
>000000AE: 29 02 
        subtitle text = STRING_TOKEN(0x0005);
>000000B0: 02 87 05 00 00 00 00 
>000000B7: 29 02 
        subtitle text = STRING_TOKEN(0x0006);
>000000B9: 02 87 06 00 00 00 00 
>000000C0: 29 02 
        subtitle text = STRING_TOKEN(0x0007);
>000000C2: 02 87 07 00 00 00 00 
>000000C9: 29 02 
        subtitle text = STRING_TOKEN(0x0008);
>000000CB: 02 87 08 00 00 00 00 
>000000D2: 29 02 
    subtitle text = STRING_TOKEN(0x0019);
>000000D4: 02 87 19 00 00 00 00 
>000000DB: 29 02 
    subtitle text = STRING_TOKEN(0x000A);
>000000DD: 02 87 0A 00 00 00 00 
>000000E4: 29 02 
    subtitle text = STRING_TOKEN(0x0019);
>000000E6: 02 87 19 00 00 00 00 
>000000ED: 29 02 
    grayoutif TRUE;
>000000EF: 19 82 
>000000F1: 46 02 
    suppressif ideqvallist HDD_PASSWORD_CONFIG.SecurityStatus.Supported == 0;
>000000F3: 0A 82 
>000000F5: 14 08 01 00 01 00 00 00 
        text
>000000FD: 03 08 0B 00 1A 00 0F 00 
            help = STRING_TOKEN(0x001A),
            text = STRING_TOKEN(0x000B),
            text = STRING_TOKEN(0x000F),
            flags = 0,
            key = 0;
    endif;
>00000105: 29 02 
    suppressif ideqvallist HDD_PASSWORD_CONFIG.SecurityStatus.Supported == 1;
>00000107: 0A 82 
>00000109: 14 08 01 00 01 00 01 00 
        text
>00000111: 03 08 0B 00 1A 00 10 00 
            help = STRING_TOKEN(0x001A),
            text = STRING_TOKEN(0x000B),
            text = STRING_TOKEN(0x0010),
            flags = 0,
            key = 0;
    endif;
>00000119: 29 02 
    suppressif ideqvallist HDD_PASSWORD_CONFIG.SecurityStatus.Enabled == 0;
>0000011B: 0A 82 
>0000011D: 14 08 06 00 01 00 00 00 
        text
>00000125: 03 08 0C 00 1A 00 0F 00 
            help = STRING_TOKEN(0x001A),
            text = STRING_TOKEN(0x000C),
            text = STRING_TOKEN(0x000F),
            flags = 0,
            key = 0;
    endif;
>0000012D: 29 02 
    suppressif ideqvallist HDD_PASSWORD_CONFIG.SecurityStatus.Enabled == 1;
>0000012F: 0A 82 
>00000131: 14 08 06 00 01 00 01 00 
        text
>00000139: 03 08 0C 00 1A 00 10 00 
            help = STRING_TOKEN(0x001A),
            text = STRING_TOKEN(0x000C),
            text = STRING_TOKEN(0x0010),
            flags = 0,
            key = 0;
    endif;
>00000141: 29 02 
    suppressif ideqvallist HDD_PASSWORD_CONFIG.SecurityStatus.Locked == 0;
>00000143: 0A 82 
>00000145: 14 08 05 00 01 00 00 00 
        text
>0000014D: 03 08 0D 00 1A 00 0F 00 
            help = STRING_TOKEN(0x001A),
            text = STRING_TOKEN(0x000D),
            text = STRING_TOKEN(0x000F),
            flags = 0,
            key = 0;
    endif;
>00000155: 29 02 
    suppressif ideqvallist HDD_PASSWORD_CONFIG.SecurityStatus.Locked == 1;
>00000157: 0A 82 
>00000159: 14 08 05 00 01 00 01 00 
        text
>00000161: 03 08 0D 00 1A 00 10 00 
            help = STRING_TOKEN(0x001A),
            text = STRING_TOKEN(0x000D),
            text = STRING_TOKEN(0x0010),
            flags = 0,
            key = 0;
    endif;
>00000169: 29 02 
    suppressif ideqvallist HDD_PASSWORD_CONFIG.SecurityStatus.Frozen == 0;
>0000016B: 0A 82 
>0000016D: 14 08 04 00 01 00 00 00 
        text
>00000175: 03 08 0E 00 1A 00 0F 00 
            help = STRING_TOKEN(0x001A),
            text = STRING_TOKEN(0x000E),
            text = STRING_TOKEN(0x000F),
            flags = 0,
            key = 0;
    endif;
>0000017D: 29 02 
    suppressif ideqvallist HDD_PASSWORD_CONFIG.SecurityStatus.Frozen == 1;
>0000017F: 0A 82 
>00000181: 14 08 04 00 01 00 01 00 
        text
>00000189: 03 08 0E 00 1A 00 10 00 
            help = STRING_TOKEN(0x001A),
            text = STRING_TOKEN(0x000E),
            text = STRING_TOKEN(0x0010),
            flags = 0,
            key = 0;
    endif;
>00000191: 29 02 
    suppressif ideqvallist HDD_PASSWORD_CONFIG.SecurityStatus.UserPasswordStatus == 0;
>00000193: 0A 82 
>00000195: 14 08 03 00 01 00 00 00 
        text
>0000019D: 03 08 17 00 1A 00 15 00 
            help = STRING_TOKEN(0x001A),
            text = STRING_TOKEN(0x0017),
            text = STRING_TOKEN(0x0015),
            flags = 0,
            key = 0;
    endif;
>000001A5: 29 02 
    suppressif ideqvallist HDD_PASSWORD_CONFIG.SecurityStatus.UserPasswordStatus == 1;
>000001A7: 0A 82 
>000001A9: 14 08 03 00 01 00 01 00 
        text
>000001B1: 03 08 17 00 1A 00 16 00 
            help = STRING_TOKEN(0x001A),
            text = STRING_TOKEN(0x0017),
            text = STRING_TOKEN(0x0016),
            flags = 0,
            key = 0;
    endif;
>000001B9: 29 02 
    suppressif ideqvallist HDD_PASSWORD_CONFIG.SecurityStatus.MasterPasswordStatus == 0;
>000001BB: 0A 82 
>000001BD: 14 08 02 00 01 00 00 00 
        text
>000001C5: 03 08 18 00 1A 00 15 00 
            help = STRING_TOKEN(0x001A),
            text = STRING_TOKEN(0x0018),
            text = STRING_TOKEN(0x0015),
            flags = 0,
            key = 0;
    endif;
>000001CD: 29 02 
    suppressif ideqvallist HDD_PASSWORD_CONFIG.SecurityStatus.MasterPasswordStatus == 1;
>000001CF: 0A 82 
>000001D1: 14 08 02 00 01 00 01 00 
        text
>000001D9: 03 08 18 00 1A 00 16 00 
            help = STRING_TOKEN(0x001A),
            text = STRING_TOKEN(0x0018),
            text = STRING_TOKEN(0x0016),
            flags = 0,
            key = 0;
    endif;
>000001E1: 29 02 
    endif;
>000001E3: 29 02 
    subtitle text = STRING_TOKEN(0x0019);
>000001E5: 02 87 19 00 00 00 00 
>000001EC: 29 02 
    grayoutif ideqval HDD_PASSWORD_CONFIG.SecurityStatus.Supported == 0;
>000001EE: 19 82 
>000001F0: 12 06 01 00 00 00 
      checkbox varid = HDD_PASSWORD_CONFIG.Request.UserPassword,
>000001F6: 5F 92 8B D6 DD 82 63 91 87 41 9B 27 20 A8 FD 60 A7 1D 
>00000208: 06 8E 11 00 12 00 01 01 01 00 08 00 14 00 
            prompt = STRING_TOKEN(0x0011),
            help = STRING_TOKEN(0x0012),
            flags = INTERACTIVE | RESET_REQUIRED,
            key = 0x101,
      endcheckbox;
>00000216: 29 02 
>00000218: 29 02 
    endif;
>0000021A: 29 02 
    grayoutif ideqval HDD_PASSWORD_CONFIG.SecurityStatus.Supported == 0;
>0000021C: 19 82 
>0000021E: 12 06 01 00 00 00 
      checkbox varid = HDD_PASSWORD_CONFIG.Request.MasterPassword,
>00000224: 5F 92 8B D6 DD 82 63 91 87 41 9B 27 20 A8 FD 60 A7 1D 
>00000236: 06 8E 13 00 14 00 02 01 01 00 09 00 14 00 
            prompt = STRING_TOKEN(0x0013),
            help = STRING_TOKEN(0x0014),
            flags = INTERACTIVE | RESET_REQUIRED,
            key = 0x102,
      endcheckbox;
>00000244: 29 02 
>00000246: 29 02 
    endif;
>00000248: 29 02 
  endform;
>00000370: 29 02 
endformset;
>0000024A: 1E 82 
>0000024C: 46 02 
>0000024E: 5F 92 8B D6 DD 82 63 91 87 41 9B 27 20 A8 FD 60 A7 1D 
>00000260: 07 9A 00 00 00 00 01 00 01 00 00 00 00 41 00 00 00 00 01 00 00 00 00 00 00 00 
>0000027A: 29 02 
>0000027C: 29 02 
>0000027E: 5F 92 8B D6 DD 82 63 91 87 41 9B 27 20 A8 FD 60 A7 1D 
>00000290: 07 9A 00 00 00 00 02 00 01 00 05 00 00 41 00 00 00 00 01 00 00 00 00 00 00 00 
>000002AA: 29 02 
>000002AC: 29 02 
>000002AE: 5F 92 8B D6 DD 82 63 91 87 41 9B 27 20 A8 FD 60 A7 1D 
>000002C0: 07 9A 00 00 00 00 03 00 01 00 04 00 00 41 00 00 00 00 01 00 00 00 00 00 00 00 
>000002DA: 29 02 
>000002DC: 29 02 
>000002DE: 5F 92 8B D6 DD 82 63 91 87 41 9B 27 20 A8 FD 60 A7 1D 
>000002F0: 07 9A 00 00 00 00 04 00 01 00 03 00 00 41 00 00 00 00 01 00 00 00 00 00 00 00 
>0000030A: 29 02 
>0000030C: 29 02 
>0000030E: 5F 92 8B D6 DD 82 63 91 87 41 9B 27 20 A8 FD 60 A7 1D 
>00000320: 07 9A 00 00 00 00 05 00 01 00 02 00 00 41 00 00 00 00 01 00 00 00 00 00 00 00 
>0000033A: 29 02 
>0000033C: 29 02 
>0000033E: 5F 92 8B D6 DD 82 63 91 87 41 9B 27 20 A8 FD 60 A7 1D 
>00000350: 07 9A 00 00 00 00 06 00 01 00 01 00 00 41 00 00 00 00 01 00 00 00 00 00 00 00 
>0000036A: 29 02 
>0000036C: 29 02 
>0000036E: 29 02 
>00000372: 29 02 

//
// All Opcode Record List 
//
>00000000: 0E A7 D7 DE 7C 73 8B 44 01 48 B5 7D B1 94 83 EC 60 6F 02 00 02 00 01 71 99 03 93 45 85 04 4B B4 5E 32 EB 83 26 04 0E 
>00000027: 5C 06 00 00 00 00 
>0000002D: 5C 06 00 00 01 00 
>00000033: 24 2A D7 DE 7C 73 8B 44 01 48 B5 7D B1 94 83 EC 60 6F 01 00 02 00 48 44 44 5F 50 41 53 53 57 4F 52 44 5F 43 4F 4E 46 49 47 00 
>0000005D: 01 86 01 00 02 00 
>00000063: 5F 15 35 17 0B 0F A0 87 93 41 B2 66 53 8C 38 AF 48 CE 00 34 12 
>00000078: 5F 15 35 17 0B 0F A0 87 93 41 B2 66 53 8C 38 AF 48 CE 00 FF FF 
>0000008D: 29 02 
>0000008F: 01 86 02 00 09 00 
>00000095: 02 87 03 00 00 00 00 
>0000009C: 29 02 
>0000009E: 02 87 19 00 00 00 00 
>000000A5: 29 02 
>000000A7: 02 87 04 00 00 00 00 
>000000AE: 29 02 
>000000B0: 02 87 05 00 00 00 00 
>000000B7: 29 02 
>000000B9: 02 87 06 00 00 00 00 
>000000C0: 29 02 
>000000C2: 02 87 07 00 00 00 00 
>000000C9: 29 02 
>000000CB: 02 87 08 00 00 00 00 
>000000D2: 29 02 
>000000D4: 02 87 19 00 00 00 00 
>000000DB: 29 02 
>000000DD: 02 87 0A 00 00 00 00 
>000000E4: 29 02 
>000000E6: 02 87 19 00 00 00 00 
>000000ED: 29 02 
>000000EF: 19 82 
>000000F1: 46 02 
>000000F3: 0A 82 
>000000F5: 14 08 01 00 01 00 00 00 
>000000FD: 03 08 0B 00 1A 00 0F 00 
>00000105: 29 02 
>00000107: 0A 82 
>00000109: 14 08 01 00 01 00 01 00 
>00000111: 03 08 0B 00 1A 00 10 00 
>00000119: 29 02 
>0000011B: 0A 82 
>0000011D: 14 08 06 00 01 00 00 00 
>00000125: 03 08 0C 00 1A 00 0F 00 
>0000012D: 29 02 
>0000012F: 0A 82 
>00000131: 14 08 06 00 01 00 01 00 
>00000139: 03 08 0C 00 1A 00 10 00 
>00000141: 29 02 
>00000143: 0A 82 
>00000145: 14 08 05 00 01 00 00 00 
>0000014D: 03 08 0D 00 1A 00 0F 00 
>00000155: 29 02 
>00000157: 0A 82 
>00000159: 14 08 05 00 01 00 01 00 
>00000161: 03 08 0D 00 1A 00 10 00 
>00000169: 29 02 
>0000016B: 0A 82 
>0000016D: 14 08 04 00 01 00 00 00 
>00000175: 03 08 0E 00 1A 00 0F 00 
>0000017D: 29 02 
>0000017F: 0A 82 
>00000181: 14 08 04 00 01 00 01 00 
>00000189: 03 08 0E 00 1A 00 10 00 
>00000191: 29 02 
>00000193: 0A 82 
>00000195: 14 08 03 00 01 00 00 00 
>0000019D: 03 08 17 00 1A 00 15 00 
>000001A5: 29 02 
>000001A7: 0A 82 
>000001A9: 14 08 03 00 01 00 01 00 
>000001B1: 03 08 17 00 1A 00 16 00 
>000001B9: 29 02 
>000001BB: 0A 82 
>000001BD: 14 08 02 00 01 00 00 00 
>000001C5: 03 08 18 00 1A 00 15 00 
>000001CD: 29 02 
>000001CF: 0A 82 
>000001D1: 14 08 02 00 01 00 01 00 
>000001D9: 03 08 18 00 1A 00 16 00 
>000001E1: 29 02 
>000001E3: 29 02 
>000001E5: 02 87 19 00 00 00 00 
>000001EC: 29 02 
>000001EE: 19 82 
>000001F0: 12 06 01 00 00 00 
>000001F6: 5F 92 8B D6 DD 82 63 91 87 41 9B 27 20 A8 FD 60 A7 1D 
>00000208: 06 8E 11 00 12 00 01 01 01 00 08 00 14 00 
>00000216: 29 02 
>00000218: 29 02 
>0000021A: 29 02 
>0000021C: 19 82 
>0000021E: 12 06 01 00 00 00 
>00000224: 5F 92 8B D6 DD 82 63 91 87 41 9B 27 20 A8 FD 60 A7 1D 
>00000236: 06 8E 13 00 14 00 02 01 01 00 09 00 14 00 
>00000244: 29 02 
>00000246: 29 02 
>00000248: 29 02 
>0000024A: 1E 82 
>0000024C: 46 02 
>0000024E: 5F 92 8B D6 DD 82 63 91 87 41 9B 27 20 A8 FD 60 A7 1D 
>00000260: 07 9A 00 00 00 00 01 00 01 00 00 00 00 41 00 00 00 00 01 00 00 00 00 00 00 00 
>0000027A: 29 02 
>0000027C: 29 02 
>0000027E: 5F 92 8B D6 DD 82 63 91 87 41 9B 27 20 A8 FD 60 A7 1D 
>00000290: 07 9A 00 00 00 00 02 00 01 00 05 00 00 41 00 00 00 00 01 00 00 00 00 00 00 00 
>000002AA: 29 02 
>000002AC: 29 02 
>000002AE: 5F 92 8B D6 DD 82 63 91 87 41 9B 27 20 A8 FD 60 A7 1D 
>000002C0: 07 9A 00 00 00 00 03 00 01 00 04 00 00 41 00 00 00 00 01 00 00 00 00 00 00 00 
>000002DA: 29 02 
>000002DC: 29 02 
>000002DE: 5F 92 8B D6 DD 82 63 91 87 41 9B 27 20 A8 FD 60 A7 1D 
>000002F0: 07 9A 00 00 00 00 04 00 01 00 03 00 00 41 00 00 00 00 01 00 00 00 00 00 00 00 
>0000030A: 29 02 
>0000030C: 29 02 
>0000030E: 5F 92 8B D6 DD 82 63 91 87 41 9B 27 20 A8 FD 60 A7 1D 
>00000320: 07 9A 00 00 00 00 05 00 01 00 02 00 00 41 00 00 00 00 01 00 00 00 00 00 00 00 
>0000033A: 29 02 
>0000033C: 29 02 
>0000033E: 5F 92 8B D6 DD 82 63 91 87 41 9B 27 20 A8 FD 60 A7 1D 
>00000350: 07 9A 00 00 00 00 06 00 01 00 01 00 00 41 00 00 00 00 01 00 00 00 00 00 00 00 
>0000036A: 29 02 
>0000036C: 29 02 
>0000036E: 29 02 
>00000370: 29 02 
>00000372: 29 02 

Total Size of all record is 0x00000374


***************************************************************
		mPackAlign = 1
		struct HDD_PASSWORD_CONFIG : mAlign [1] mTotalSize [0x2]

		struct HDD_PASSWORD_CONFIG {
			+00000000[00000000] SecurityStatus <HDD_PASSWORD_SECURITY_STATUS>
			+00000001[00000001] Request <HDD_PASSWORD_REQUEST>
		};
---------------------------------------------------------------
		struct HDD_PASSWORD_REQUEST : mAlign [1] mTotalSize [0x1]

		struct HDD_PASSWORD_REQUEST {
			+00000000[00000000] UserPassword <UINT8>
			+00000000[00000000] MasterPassword <UINT8>
			+00000000[00000000] Reserved <UINT8>
		};
---------------------------------------------------------------
		struct HDD_PASSWORD_SECURITY_STATUS : mAlign [1] mTotalSize [0x1]

		struct HDD_PASSWORD_SECURITY_STATUS {
			+00000000[00000000] Supported <UINT8>
			+00000000[00000000] Enabled <UINT8>
			+00000000[00000000] Locked <UINT8>
			+00000000[00000000] Frozen <UINT8>
			+00000000[00000000] UserPasswordStatus <UINT8>
			+00000000[00000000] MasterPasswordStatus <UINT8>
			+00000000[00000000] Reserved <UINT8>
		};
---------------------------------------------------------------
		struct EFI_HII_REF : mAlign [16] mTotalSize [0x16]

		struct EFI_HII_REF {
			+00000000[00000000] QuestionId <UINT16>
			+00000002[00000002] FormId <UINT16>
			+00000004[00000004] FormSetGuid <(null)>
			+00000020[00000014] DevicePath <EFI_STRING_ID>
		};
---------------------------------------------------------------
		struct EFI_HII_TIME : mAlign [1] mTotalSize [0x3]

		struct EFI_HII_TIME {
			+00000000[00000000] Hours <UINT8>
			+00000001[00000001] Minutes <UINT8>
			+00000002[00000002] Seconds <UINT8>
		};
---------------------------------------------------------------
		struct EFI_STRING_ID : mAlign [2] mTotalSize [0x2]

		struct EFI_STRING_ID {
		};
---------------------------------------------------------------
		struct EFI_HII_DATE : mAlign [2] mTotalSize [0x4]

		struct EFI_HII_DATE {
			+00000000[00000000] Year <UINT16>
			+00000002[00000002] Month <UINT8>
			+00000003[00000003] Day <UINT8>
		};
---------------------------------------------------------------
		struct BOOLEAN : mAlign [1] mTotalSize [0x1]

		struct BOOLEAN {
		};
---------------------------------------------------------------
		struct UINT8 : mAlign [1] mTotalSize [0x1]

		struct UINT8 {
		};
---------------------------------------------------------------
		struct UINT16 : mAlign [2] mTotalSize [0x2]

		struct UINT16 {
		};
---------------------------------------------------------------
		struct UINT32 : mAlign [4] mTotalSize [0x4]

		struct UINT32 {
		};
---------------------------------------------------------------
		struct UINT64 : mAlign [8] mTotalSize [0x8]

		struct UINT64 {
		};
---------------------------------------------------------------
***************************************************************
