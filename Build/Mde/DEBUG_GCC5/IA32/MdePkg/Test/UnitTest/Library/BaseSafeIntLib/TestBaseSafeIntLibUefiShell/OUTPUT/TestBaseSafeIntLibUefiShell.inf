## @file
# UEFI Shell based Application that Unit Tests the SafeIntLib
#
# Copyright (c) Microsoft Corporation.<BR>
# Copyright (c) 2019 - 2020, Intel Corporation. All rights reserved.<BR>
# SPDX-License-Identifier: BSD-2-Clause-Patent
##

# DO NOT EDIT
# FILE auto-generated

[Defines]
  INF_VERSION                = 0x00010017
  BASE_NAME                  = TestBaseSafeIntLibUefiShell
  FILE_GUID                  = 1F91B73E-5B6A-4317-80E8-E7C36A3C7AF4
  MODULE_TYPE                = UEFI_APPLICATION
  VERSION_STRING             = 1.0
  ENTRY_POINT                = DxeEntryPoint
  MODULE_UNI_FILE            = TestBaseSafeIntLib.uni

[Packages.IA32]
  MdeModulePkg/MdeModulePkg.dec

[Binaries.IA32]
  PE32|TestBaseSafeIntLibUefiShell.efi

[PatchPcd.IA32]

[Protocols.IA32]

[Ppis.IA32]

[Guids.IA32]
  ## SOMETIMES_CONSUMES ## GUID
  gEfiStatusCodeDataTypeDebugGuid


[PcdEx.IA32]

[LibraryClasses.IA32]
## @LIB_INSTANCES
#  MdePkg/Library/RegisterFilterLibNull/RegisterFilterLibNull.inf
#  MdePkg/Library/BaseDebugPrintErrorLevelLib/BaseDebugPrintErrorLevelLib.inf
#  MdePkg/Library/BaseReportStatusCodeLibNull/BaseReportStatusCodeLibNull.inf
#  MdePkg/Library/BasePrintLib/BasePrintLib.inf
#  UnitTestFrameworkPkg/Library/UnitTestResultReportLib/UnitTestResultReportLibConOut.inf
#  UnitTestFrameworkPkg/Library/UnitTestPersistenceLibNull/UnitTestPersistenceLibNull.inf
#  MdePkg/Library/UefiMemoryAllocationLib/UefiMemoryAllocationLib.inf
#  MdePkg/Library/BasePcdLibNull/BasePcdLibNull.inf
#  MdePkg/Library/BaseMemoryLib/BaseMemoryLib.inf
#  UnitTestFrameworkPkg/Library/UnitTestDebugAssertLib/UnitTestDebugAssertLib.inf
#  UnitTestFrameworkPkg/Library/UnitTestLib/UnitTestLib.inf
#  MdeModulePkg/Library/PeiDxeDebugLibReportStatusCode/PeiDxeDebugLibReportStatusCode.inf
#  MdePkg/Library/BaseLib/BaseLib.inf
#  MdePkg/Library/UefiBootServicesTableLib/UefiBootServicesTableLib.inf
#  MdePkg/Library/UefiApplicationEntryPoint/UefiApplicationEntryPoint.inf
#  MdePkg/Library/BaseSafeIntLib/BaseSafeIntLib.inf

[Depex.IA32]




#
# The following information is for reference only and not required by the build tools.
#
#  VALID_ARCHITECTURES           = IA32 X64
#

[BuildOptions.IA32]
## @AsBuilt
##   GCC:DEBUG_GCC5_IA32_ASMLINK_FLAGS = /nologo /tiny
##   GCC:DEBUG_GCC5_IA32_OPTROM_FLAGS = -e
##   GCC:DEBUG_GCC5_IA32_DTC_FLAGS = -H epapr
##   GCC:DEBUG_GCC5_IA32_APP_FLAGS = 
##   GCC:DEBUG_GCC5_IA32_OBJCOPY_FLAGS = 
##   GCC:DEBUG_GCC5_IA32_ASL_FLAGS = 
##   GCC:DEBUG_GCC5_IA32_GENFW_FLAGS = 
##   GCC:DEBUG_GCC5_IA32_ASLDLINK_FLAGS = -nostdlib -Wl,-n,-q,--gc-sections -z common-page-size=0x40 -Wl,--defsym=PECOFF_HEADER_SIZE=0 -Wl,--script=$(EDK_TOOLS_PATH)/Scripts/GccBase.lds -Wl,--entry,ReferenceAcpiTable -u ReferenceAcpiTable -Wl,-m,elf_i386 -no-pie
##   GCC:DEBUG_GCC5_IA32_ASM_FLAGS = -c -x assembler -imacros AutoGen.h -m32 -march=i386
##   GCC:DEBUG_GCC5_IA32_RC_FLAGS = -I binary -O elf32-i386          -B i386    --rename-section .data=.hii
##   GCC:DEBUG_GCC5_IA32_SYMRENAME_FLAGS = Symbol renaming not needed for
##   GCC:DEBUG_GCC5_IA32_NASM_FLAGS = -f elf32
##   GCC:DEBUG_GCC5_IA32_DEPS_FLAGS = -MMD -MF $@.deps
##   GCC:DEBUG_GCC5_IA32_ASLPP_FLAGS = -x c -E -include AutoGen.h
##   GCC:DEBUG_GCC5_IA32_ASLCC_FLAGS = -x c -fno-lto -m32
##   GCC:DEBUG_GCC5_IA32_CC_FLAGS = -g -Os -fshort-wchar -fno-builtin -fno-strict-aliasing -Wall -Werror -Wno-array-bounds -include AutoGen.h -fno-common -ffunction-sections -fdata-sections -DSTRING_ARRAY_NAME=$(BASE_NAME)Strings -m32 -march=i586 -malign-double -fno-stack-protector -D EFI32 -fno-asynchronous-unwind-tables -Wno-address -fno-pic -fno-pie -flto -Os -D DISABLE_NEW_DEPRECATED_INTERFACES -D EDKII_UNIT_TEST_FRAMEWORK_ENABLED
##   GCC:DEBUG_GCC5_IA32_PP_FLAGS = -E -x assembler-with-cpp -include AutoGen.h -DOPENSBI_EXTERNAL_SBI_TYPES=OpensbiTypes.h
##   GCC:DEBUG_GCC5_IA32_VFRPP_FLAGS = -x c -E -P -DVFRCOMPILE --include $(MODULE_NAME)StrDefs.h
##   GCC:DEBUG_GCC5_IA32_VFR_FLAGS = -l -n
##   GCC:DEBUG_GCC5_IA32_DLINK2_FLAGS = -Wl,--defsym=PECOFF_HEADER_SIZE=0x220 -Wl,--script=$(EDK_TOOLS_PATH)/Scripts/GccBase.lds -Wno-error -no-pie
##   GCC:DEBUG_GCC5_IA32_DLINK_FLAGS = -nostdlib -Wl,-n,-q,--gc-sections -z common-page-size=0x40 -Wl,--entry,$(IMAGE_ENTRY_POINT) -u $(IMAGE_ENTRY_POINT) -Wl,-Map,$(DEST_DIR_DEBUG)/$(BASE_NAME).map,--whole-archive -flto -Os -Wl,-m,elf_i386,--oformat=elf32-i386
##   GCC:DEBUG_GCC5_IA32_NASMB_FLAGS = -f bin
